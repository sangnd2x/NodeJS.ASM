{"ast":null,"code":"var _jsxFileName = \"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/search/SearchResult.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../utils/axios';\nimport requests from '../../utils/requests';\nimport './SearchResult.css';\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\nconst SearchResult = ({\n  query\n}) => {\n  const [movies, setMovies] = useState([]);\n  const url = `${requests.fetchSearch}`;\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          query: query\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => setMovies(data)).catch(err => console.log(err));\n    }; // async function fetchData() {\n    // \tawait fetch(url, {\n    // \t\tmethod: 'POST',\n    // \t\tbody: JSON.stringify({ query: query }),\n    // \t\theaders: {\n    // \t\t\t'Content-Type': 'application/json'\n    // \t\t}\n    // \t}).then(res => res.json()).then(data => setMovies(data)).catch(err => console.log(err));\n    // \t// const data = await request.json();\n    // \t// console.log(data);\n    // \t// setMovies(data);\n    // }\n    // if (query) {\n    // \tfetchData();\n    // } else {\n    // \tsetMovies([]);\n    // }\n\n  }, [url, query]);\n  console.log(movies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters search-resul-container sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      className: `row_poster row_posterLarge`,\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  })));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/search/SearchResult.jsx"],"names":["React","useState","useEffect","axios","requests","base_url","SearchResult","query","movies","setMovies","url","fetchSearch","fetchData","fetch","method","body","JSON","stringify","headers","then","res","json","data","catch","err","console","log","map","movie","id","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,oBAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMS,GAAG,GAAI,GAAEN,QAAQ,CAACO,WAAY,EAApC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,SAAS,GAAG,YAAY;AAC7B,YAAMC,KAAK,CAACH,GAAD,EAAM;AAChBI,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,UAAAA,KAAK,EAAEA;AAAT,SAAf,CAFU;AAGhBW,QAAAA,OAAO,EAAE;AACR,0BAAgB;AADR;AAHO,OAAN,CAAL,CAMHC,IANG,CAMEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANT,EAMqBF,IANrB,CAM0BG,IAAI,IAAIb,SAAS,CAACa,IAAD,CAN3C,EAMmDC,KANnD,CAMyDC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhE,CAAN;AAOA,KARD,CADe,CAUf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,GA5BQ,EA4BN,CAACd,GAAD,EAAMH,KAAN,CA5BM,CAAT;AA8BAkB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,MAAM,CAACmB,GAAP,CAAYC,KAAD,IAAW;AACtB,wBACC;AACC,MAAA,GAAG,EAAEA,KAAK,CAACC,EADZ;AAEC,MAAA,SAAS,EAAG,4BAFb;AAGC,MAAA,GAAG,EAAG,GAAExB,QAAS,GAAEuB,KAAK,CAACE,WAAY,EAHtC;AAIC,MAAA,GAAG,EAAEF,KAAK,CAACG,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAQA,GATA,CADF,CAFD,CADD;AAiBA,CAtDD;;AAwDA,eAAezB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport axios from '../../utils/axios';\nimport requests from '../../utils/requests';\n\nimport './SearchResult.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n\nconst SearchResult = ({query}) => {\n\tconst [movies, setMovies] = useState([]);\n\n\tconst url = `${requests.fetchSearch}`;\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tawait fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ query: query }),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t}).then(res => res.json()).then(data => setMovies(data)).catch(err => console.log(err));\n\t\t}\n\t\t// async function fetchData() {\n\t\t// \tawait fetch(url, {\n\t\t// \t\tmethod: 'POST',\n\t\t// \t\tbody: JSON.stringify({ query: query }),\n\t\t// \t\theaders: {\n\t\t// \t\t\t'Content-Type': 'application/json'\n\t\t// \t\t}\n\t\t// \t}).then(res => res.json()).then(data => setMovies(data)).catch(err => console.log(err));\n\t\t// \t// const data = await request.json();\n\t\t// \t// console.log(data);\n\t\t// \t// setMovies(data);\n\t\t// }\n\n\t\t// if (query) {\n\t\t// \tfetchData();\n\t\t// } else {\n\t\t// \tsetMovies([]);\n\t\t// }\n\t}, [url, query]);\n\n\tconsole.log(movies);\n\n\treturn(\n\t\t<div className='row'>\n\t\t\t<h2>Search Result</h2>\n\t\t\t<div className='row_posters search-resul-container sc2'>\n\t\t\t\t{movies.map((movie) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\t\tclassName={`row_poster row_posterLarge`}\n\t\t\t\t\t\t\tsrc={`${base_url}${movie.poster_path}`}\n\t\t\t\t\t\t\talt={movie.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}