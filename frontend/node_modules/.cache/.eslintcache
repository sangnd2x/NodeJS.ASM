[{"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/index.js":"1","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/App.js":"2","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/home/Home.jsx":"3","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/list/List.jsx":"4","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/hotel/Hotel.jsx":"5","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/footer/Footer.jsx":"6","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/featured/Featured.jsx":"7","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/navbar/Navbar.jsx":"8","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/mailList/MailList.jsx":"9","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/featuredProperties/FeaturedProperties.jsx":"10","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/header/Header.jsx":"11","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/searchItem/SearchItem.jsx":"12","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/propertyList/PropertyList.jsx":"13","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/Login/Login.jsx":"14","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/Register/Register.jsx":"15","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/booking/booking.jsx":"16","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/transaction/trasaction.jsx":"17"},{"size":232,"mtime":1655533777000,"results":"18","hashOfConfig":"19"},{"size":913,"mtime":1667967145235,"results":"20","hashOfConfig":"19"},{"size":2456,"mtime":1667908884596,"results":"21","hashOfConfig":"19"},{"size":4303,"mtime":1667912767758,"results":"22","hashOfConfig":"19"},{"size":4350,"mtime":1667981248536,"results":"23","hashOfConfig":"19"},{"size":2068,"mtime":1655834041000,"results":"24","hashOfConfig":"19"},{"size":555,"mtime":1667792272521,"results":"25","hashOfConfig":"19"},{"size":1214,"mtime":1667981269297,"results":"26","hashOfConfig":"19"},{"size":420,"mtime":1655533777000,"results":"27","hashOfConfig":"19"},{"size":601,"mtime":1667873767463,"results":"28","hashOfConfig":"19"},{"size":7451,"mtime":1667905684263,"results":"29","hashOfConfig":"19"},{"size":1863,"mtime":1667912780886,"results":"30","hashOfConfig":"19"},{"size":2346,"mtime":1667793280138,"results":"31","hashOfConfig":"19"},{"size":1934,"mtime":1667904247498,"results":"32","hashOfConfig":"19"},{"size":1702,"mtime":1667895628766,"results":"33","hashOfConfig":"19"},{"size":10817,"mtime":1667981606809,"results":"34","hashOfConfig":"19"},{"size":4064,"mtime":1667981764255,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ijkul",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/index.js",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/App.js",[],[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/home/Home.jsx",["95","96","97","98"],[],"import { useState, useEffect, useRef } from \"react\";\nimport Featured from \"../../components/featured/Featured\";\nimport FeaturedProperties from \"../../components/featuredProperties/FeaturedProperties\";\nimport Footer from \"../../components/footer/Footer\";\nimport Header from \"../../components/header/Header\";\nimport MailList from \"../../components/mailList/MailList\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport PropertyList from \"../../components/propertyList/PropertyList\";\nimport \"./home.css\";\nimport axios from 'axios';\nimport { useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  const location = useLocation();\n  const [hotels, setHotels] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [bestRated, setBestRated] = useState([]);\n  const [isHotel, setIsHotel] = useState(0);\n  const [isApartments, setIsApartments] = useState(0);\n  const [isResorts, setIsResorts] = useState(0);\n  const [isVillas, setIsVillas] = useState(0);\n  const [isCabins, setIsCabins] = useState(0);\n\n  const [user, setUser] = useState(location.state ? location.state.user : null);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/hotels')\n      .then(res => {\n        setHotels(res.data);\n        setFeatured(res.data.filter(hotel => hotel.featured === true));\n        setBestRated(res.data.filter(hotel => {\n          if (hotel.rating) {\n            return hotel;\n          }\n        }).sort((a, b) => b.rating - a.rating));\n        setIsHotel(res.data.filter(hotel => hotel.type === 'hotel'));\n        setIsApartments(res.data.filter(hotel => hotel.type === 'apartment'));\n        setIsResorts(res.data.filter(hotel => hotel.type === 'resort'));\n        setIsVillas(res.data.filter(hotel => hotel.type === 'villa'));\n        setIsCabins(res.data.filter(hotel => hotel.type === 'cabin'));\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <Navbar user={user} />\n      <Header user={user} />\n      <div className=\"homeContainer\">\n        <Featured featured={featured} />\n        <h1 className=\"homeTitle\">Browse by property type</h1>\n        <PropertyList hotel={isHotel} apt={isApartments} resorts={isResorts} villas={isVillas} cabins={isCabins} />\n        <h1 className=\"homeTitle\">Homes guests love</h1>\n        <FeaturedProperties rating={bestRated.length > 0 ? bestRated : featured} />\n        <MailList/>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/list/List.jsx",["99","100","101","102"],[],"import \"./list.css\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport Header from \"../../components/header/Header\";\nimport Footer from \"../../components/footer/Footer\";\n\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { DateRange } from \"react-date-range\";\nimport SearchItem from \"../../components/searchItem/SearchItem\";\nimport axios from \"axios\";\n\nconst List = () => {\n  const location = useLocation();\n  const [destination, setDestination] = useState(location.state.destination);\n  const [date, setDate] = useState(location.state.date);\n  const [openDate, setOpenDate] = useState(false);\n  const [options, setOptions] = useState(location.state.options);\n  const [user, setUser] = useState(location.state.user);\n\n  const [hotels, setHotels] = useState([]);\n\n  console.log(hotels);\n\n  useEffect(() => {\n    const data = {\n      destination: location.state.destination,\n      date: location.state.date,\n      options: location.state.options\n    }\n\n    axios.post('http://localhost:5000/search', data)\n      .then(res => setHotels(res.data))\n      .catch(err => console.log(err));\n  }, [])\n\n  return (\n    <div>\n      <Navbar user={user} />\n      <Header type=\"list\" />\n      <div className=\"listContainer\">\n        <div className=\"listWrapper\">\n          <div className=\"listSearch\">\n            <h1 className=\"lsTitle\">Search</h1>\n            <div className=\"lsItem\">\n              <label>Destination</label>\n              <input placeholder={destination} type=\"text\" />\n            </div>\n            <div className=\"lsItem\">\n              <label>Check-in Date</label>\n              <span onClick={() => setOpenDate(!openDate)}>{`${format(\n                date[0].startDate,\n                \"MM/dd/yyyy\"\n              )} to ${format(date[0].endDate, \"MM/dd/yyyy\")}`}</span>\n              {openDate && (\n                <DateRange\n                  onChange={(item) => setDate([item.selection])}\n                  minDate={new Date()}\n                  ranges={date}\n                />\n              )}\n            </div>\n            <div className=\"lsItem\">\n              <label>Options</label>\n              <div className=\"lsOptions\">\n                <div className=\"lsOptionItem\">\n                  <span className=\"lsOptionText\">\n                    Min price <small>per night</small>\n                  </span>\n                  <input type=\"number\" className=\"lsOptionInput\" />\n                </div>\n                <div className=\"lsOptionItem\">\n                  <span className=\"lsOptionText\">\n                    Max price <small>per night</small>\n                  </span>\n                  <input type=\"number\" className=\"lsOptionInput\" />\n                </div>\n                <div className=\"lsOptionItem\">\n                  <span className=\"lsOptionText\">Adult</span>\n                  <input\n                    type=\"number\"\n                    min={1}\n                    className=\"lsOptionInput\"\n                    placeholder={options.adult}\n                  />\n                </div>\n                <div className=\"lsOptionItem\">\n                  <span className=\"lsOptionText\">Children</span>\n                  <input\n                    type=\"number\"\n                    min={0}\n                    className=\"lsOptionInput\"\n                    placeholder={options.children}\n                  />\n                </div>\n                <div className=\"lsOptionItem\">\n                  <span className=\"lsOptionText\">Room</span>\n                  <input\n                    type=\"number\"\n                    min={1}\n                    className=\"lsOptionInput\"\n                    placeholder={options.room}\n                  />\n                </div>\n              </div>\n            </div>\n            <button>Search</button>\n          </div>\n          <div className=\"listResult\">\n            {\n              hotels.map(hotel => (\n                <SearchItem hotel={hotel} date={location.state.date} options={options} key={hotel._id} user={user} />\n              ))\n            }\n            {/* <SearchItem />\n            <SearchItem />\n            <SearchItem /> */}\n          </div>\n        </div>\n      </div>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default List;\n","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/hotel/Hotel.jsx",["103","104","105","106"],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/footer/Footer.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/featured/Featured.jsx",["107","108"],[],"import { useState, useEffect } from \"react\";\nimport \"./featured.css\";\n\nconst Featured = (props) => {\n  return (\n    <div className=\"featured\">\n      {props.featured.map(f => (\n        <div className=\"featuredItem\" key={f._id}>\n          <img\n            src={f.photos[2]}\n            alt={f.name}\n            className=\"featuredImg\"\n          />\n          <div className=\"featuredTitles\">\n            <h1>{f.city}</h1>\n            <h2>{f.rooms.length} properties</h2>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Featured;\n",[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/navbar/Navbar.jsx",["109","110","111"],[],"import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./navbar.css\"\n\nconst Navbar = (props) => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(props.user);\n  const [hotel, setHotel] = useState(props.hotel);\n\n  const handleClick = () => {\n    if (!props.user) return\n    if (props.user) navigate('/transaction', { state: { user, hotel } });\n  }\n  return (\n    <div className=\"navbar\">\n      {props.user ?\n        (<div className=\"navContainer\">\n        <span className=\"logo\">Booking Website</span>\n        <div className=\"navItems\">\n          <p>{props.user.username}</p>\n          <button className=\"navButton\" onClick={() => handleClick()}><a href=\"\">Transaction</a></button>\n          <button className=\"navButton\"><a href=\"/login\">Logout</a></button>\n        </div>\n        </div>)\n        :\n        (<div className=\"navContainer\">\n        <span className=\"logo\">Booking Website</span>\n        <div className=\"navItems\">\n          <button className=\"navButton\"><a href=\"/register\">Register</a></button>\n          <button className=\"navButton\"><a href=\"/login\">Log in</a></button>\n        </div>\n      </div>) }\n    </div>\n  )\n}\n\nexport default Navbar\n","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/mailList/MailList.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/featuredProperties/FeaturedProperties.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/header/Header.jsx",["112"],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/searchItem/SearchItem.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/components/propertyList/PropertyList.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/Login/Login.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/Register/Register.jsx",[],[],"/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/booking/booking.jsx",["113","114","115","116","117","118"],[],"import { DateRange } from \"react-date-range\";\nimport { format } from \"date-fns\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from '../../components/navbar/Navbar';\nimport MailList from '../../components/mailList/MailList';\nimport Footer from '../../components/footer/Footer';\nimport './booking.css'\n\n\nconst Booking = () => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [date, setDate] = useState([{\n        startDate: location.state.date[0].startDate,\n        endDate: location.state.date[0].endDate,\n        key: 'selection'\n    }]);\n    const [user, setUser] = useState(location.state.user);\n    const [hotel, setHotel] = useState(location.state.hotel);\n    console.log(hotel);\n    const [options, setOptions] = useState(location.state.options);\n    const [rooms, setRooms] = useState([]);\n    const [checked, setChecked] = useState(false);\n    const [roomNumber, setRoomNumber] = useState([]);\n    const [price, setPrice] = useState([]);\n    const [selectedRoom, setSelectedRoom] = useState(0);\n    const [totalBill, setTotalBill] = useState(0);\n    const [dateDiff, setDateDiff] = useState(Math.floor(new Date(date[0].endDate.getTime() - new Date(date[0].startDate.getTime())) / (24 * 3600 * 1000)));\n    const [info, setInfo] = useState({\n        fullName: '',\n        email: '',\n        phoneNumber: '',\n        idNumber: ''\n    });\n    const [paymentMethod, setPaymentMethod] = useState('')\n\n    // set new number of staying days\n    useEffect(() => {\n        setDateDiff(Math.floor(new Date(date[0].endDate.getTime() - new Date(date[0].startDate.getTime())) / (24 * 3600 * 1000)));\n    }, [date]);\n\n    // Total bill\n    useEffect(() => {\n        let total = 0\n        for (let i = 0; i < price.length; i++){\n            total = total + price[i] * dateDiff;\n        }\n        setTotalBill(total);\n    },[price, dateDiff, selectedRoom])\n\n    // Fetch rooms according to number of people staying and number of staying days\n    useEffect(() => {\n        const roomId = {\n            id: hotel.rooms,\n            options: options\n        };\n\n        const post = () => {\n            fetch('http://localhost:5000/room', {\n                method: 'POST',\n                body: JSON.stringify(roomId),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(data => {\n                    setRooms(data);\n                })\n                .catch(err => console.log(err));\n        };\n    \n        post();\n    }, []);\n\n    // Room selection\n    const handleChange = (e, roomPrice) => {\n        let isChecked = e.target.checked;\n        let roomNum = +e.target.value;\n        let rprice = roomPrice;\n        if (isChecked) {\n            setSelectedRoom(selectedRoom + 1);\n            setPrice(prev => [...prev, rprice]);\n            setRoomNumber(prev => [...prev, roomNum])\n        } else {\n            setSelectedRoom(selectedRoom - 1);\n            price.splice(-1);\n            setPrice(price);\n            roomNumber.pop();\n            setRoomNumber(roomNumber);\n        }\n        setChecked(isChecked);\n    }\n\n    // Payment method selection\n    const handleSelect = (e) => {\n        setPaymentMethod(e.target.value);\n    }\n\n    const handleReserve = () => {\n        const data = {\n            user: user.username,\n            hotel: hotel._id,\n            room: roomNumber,\n            dateStart: date[0].startDate,\n            dateEnd: date[0].endDate,\n            price: totalBill,\n            payment: paymentMethod,\n            status: 'booked'\n        }\n\n        const post = () => {\n            fetch('http://localhost:5000/reservation', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(data => console.log(data.message))\n                .catch(err => console.log(err))\n        }\n\n        post();\n        navigate('/transaction', {state: {user, hotel, roomNumber}});\n    }\n\n    return (\n        <div>\n            <Navbar user={user} />\n            <div className=\"wrapper\">\n                <div className=\"hotel\">\n                    <div className=\"hotel__details\">\n                        <h1>{hotel.name}</h1>\n                        <p>{hotel.desc}</p>\n                    </div>\n                    <div className=\"hotel_booking\">\n                        <div className=\"box\">\n                            <h1>${hotel.cheapestPrice} (1 night)</h1>\n                            <button className=\"upper-button\">Reserve or Book Now!</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"date__info\">\n                    <div className=\"date__info-date\">\n                        <h1>Dates</h1>\n                            <DateRange\n                                onChange={item => setDate([item.selection])}\n                                showSelectionPreview = {true}\n                                ranges={date}\n                                direction=\"horizontal\"\n                            />\n                    </div>\n                    <div className=\"date__info-info\">\n                        <h1>Reserve Info</h1>\n                        <form action=\"\">\n                            <div className=\"date__info-info-input\">\n                                <label>Your Full Name:</label>\n                                <input type=\"text\" placeholder=\"Full Name\" name=\"fullName\" onChange={(e) => setInfo({...info, fullName : e.target.value})}/>\n                            </div>\n                            <div className=\"date__info-info-input\">\n                                <label>Your Email:</label>\n                                <input type=\"text\" placeholder=\"Email\" name=\"email\" onChange={(e) => setInfo({...info, email : e.target.value})}/>\n                            </div>\n                            <div className=\"date__info-info-input\">\n                                <label>Your Phone Number:</label>\n                                <input type=\"text\" placeholder=\"Phone Number\" name=\"phone\" onChange={(e) => setInfo({...info, phoneNumber : e.target.value})}/>\n                            </div>\n                            <div className=\"date__info-info-input\">\n                                <label>Your Indentity Card Number:</label>\n                                <input type=\"text\" placeholder=\"Indentity Card Number\" name=\"idNumber\" onChange={(e) => setInfo({...info, idNumber : e.target.value})}/>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"room\">\n                    <h1>Select Rooms</h1>\n                    <div className=\"room__type\">\n                        {rooms ? rooms.map(room => (\n                            <div className=\"room__type_n\" key={room._id}>\n                                <div className=\"room__type-info\">\n                                    <h3>{room.title}</h3>\n                                    <p>{room.desc}</p>\n                                    <p>Max people : <span>{room.maxPeople}</span></p>\n                                    <h3>${room.price}</h3>\n                                </div>\n                                <div className=\"room_type-number\">\n                                    <ul className=\"room_type-number-list\">\n                                        {room.roomNumbers.map(n => (\n                                            <li key={n}>\n                                                <label htmlFor={n}>{n}</label>\n                                                <input type=\"checkbox\" value={n} onChange={(e) => handleChange(e, room.price)} />\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n                        ))\n                            :\n                        (<div className=\"room__type_n\">\n                            <div className=\"room__type-info\">\n                                <h3>Budget Double Room</h3>\n                                <p>Pay nothing until Septermber 04, 2000</p>\n                                <p>Max people : <span>2</span></p>\n                                <h3>$350</h3>\n                            </div>\n                            <div className=\"room_type-number\">\n                                <ul className=\"room_type-number-list\">\n                                    <li>\n                                        <label htmlFor=\"\">101</label>\n                                        <input type=\"checkbox\" />\n                                    </li>\n                                    <li>\n                                        <label htmlFor=\"\">201</label>\n                                        <input type=\"checkbox\" />\n                                    </li>\n                                    <li>\n                                        <label htmlFor=\"\">202</label>\n                                        <input type=\"checkbox\" />\n                                    </li>\n                                    <li>\n                                        <label htmlFor=\"\">101</label>\n                                        <input type=\"checkbox\" />\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>)}\n                    </div>\n                </div>\n                <div className=\"payment\">\n                    <h1>Total Bill: ${totalBill}</h1>\n                    <div className=\"payment__details\">\n                        <div className=\"payment__details-method\">\n                            <select name=\"payment-method\" id=\"payment-method\" onChange={(e) => handleSelect(e)}>\n                                <option value=\"Select Payment Method\">Select Payment Method</option>\n                                <option value=\"Credit Card\">Credit Card</option>\n                                <option value=\"Cash\">Cash</option>\n                            </select>\n                        </div>\n                        <div className=\"payment__details-reserve\">\n                            <button onClick={() => handleReserve()}>Reserve Now</button>\n                        </div>\n                    </div>\n                </div>  \n            </div>\n            <MailList />\n            <Footer />\n       </div>\n    )\n};\n\nexport default Booking;","/Users/sangnguyen/Documents/nodejs/Asm/frontend/src/pages/transaction/trasaction.jsx",["119","120","121","122","123","124","125"],[],"import { useState, useEffect } from \"react\";\nimport {\n    faBed,\n    faCalendarDays,\n    faCar,\n    faPerson,\n    faPlane,\n    faTaxi,\n  } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useLocation } from \"react-router-dom\";\nimport Navbar from '../../components/navbar/Navbar';\nimport MailList from \"../../components/mailList/MailList\";\nimport Footer from \"../../components/footer/Footer\";\nimport './transaction.css';\n\n\nconst TransactionDashboard = () => {\n    const location = useLocation();\n    const [user, setUser] = useState(location.state.user);\n    const [transactions, setTransactions] = useState([]);\n    const [hotel, setHotel] = useState(location.state.hotel);\n    const [roomBooked, setRoomBooked] = useState(location.state.roomNumber);\n\n    console.log(transactions);\n\n    useEffect(() => {\n        const data = {\n            user: user.username\n        };\n\n        const post = () => {\n            fetch('http://localhost:5000/transaction', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(res => res.json())\n                .then(data => setTransactions(data))\n                .catch(err => console.log(err));\n        };\n\n        post();\n    }, []);\n\n    return (\n        <div>\n            <Navbar user={user} />\n            <div className=\"header\">\n                <div className=\"headerList\">\n                    <div className=\"headerListItem active\">\n                        <FontAwesomeIcon icon={faBed} />\n                        <span>Stays</span>\n                    </div>\n                    <div className=\"headerListItem\">\n                        <FontAwesomeIcon icon={faPlane} />\n                        <span>Flights</span>\n                    </div>\n                    <div className=\"headerListItem\">\n                        <FontAwesomeIcon icon={faCar} />\n                        <span>Car rentals</span>\n                    </div>\n                    <div className=\"headerListItem\">\n                        <FontAwesomeIcon icon={faBed} />\n                        <span>Attractions</span>\n                    </div>\n                    <div className=\"headerListItem\">\n                        <FontAwesomeIcon icon={faTaxi} />\n                        <span>Airport taxis</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"transactions\">\n                <h1>Your Transactions</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Hotel</th>\n                            <th>Room</th>\n                            <th>Date</th>\n                            <th>Price</th>\n                            <th>Payment Method</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {transactions.map((trans, i) => (\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td>{hotel.name}</td>\n                                <td>{trans.room.join(',')}</td>\n                                <td>{trans.dateStart.replace(/T.*/,'').split('-').reverse().join('/')} - {trans.dateEnd.replace(/T.*/,'').split('-').reverse().join('/')}</td>\n                                <td>${trans.price}</td>\n                                <td>{trans.payment}</td>\n                                <td style={{color: \"white\"}}><span style={trans.status === 'booked'? {backgroundColor:\"#38D039\"} : {backgroundColor:\"white\"} }>{trans.status}</span></td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <MailList />\n            <Footer />\n        </div>\n    )\n};\n\nexport default TransactionDashboard;\n",{"ruleId":"126","severity":1,"message":"127","line":1,"column":31,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"130","line":15,"column":10,"nodeType":"128","messageId":"129","endLine":15,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":24,"column":16,"nodeType":"128","messageId":"129","endLine":24,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":31,"column":44,"nodeType":"134","messageId":"135","endLine":31,"endColumn":46},{"ruleId":"126","severity":1,"message":"136","line":15,"column":23,"nodeType":"128","messageId":"129","endLine":15,"endColumn":37},{"ruleId":"126","severity":1,"message":"137","line":18,"column":19,"nodeType":"128","messageId":"129","endLine":18,"endColumn":29},{"ruleId":"126","severity":1,"message":"131","line":19,"column":16,"nodeType":"128","messageId":"129","endLine":19,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":35,"column":6,"nodeType":"140","endLine":35,"endColumn":8,"suggestions":"141"},{"ruleId":"126","severity":1,"message":"142","line":20,"column":16,"nodeType":"128","messageId":"129","endLine":20,"endColumn":23},{"ruleId":"126","severity":1,"message":"131","line":21,"column":16,"nodeType":"128","messageId":"129","endLine":21,"endColumn":23},{"ruleId":"126","severity":1,"message":"143","line":22,"column":17,"nodeType":"128","messageId":"129","endLine":22,"endColumn":25},{"ruleId":"126","severity":1,"message":"137","line":23,"column":19,"nodeType":"128","messageId":"129","endLine":23,"endColumn":29},{"ruleId":"126","severity":1,"message":"144","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"126","severity":1,"message":"145","line":1,"column":20,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"126","severity":1,"message":"131","line":7,"column":16,"nodeType":"128","messageId":"129","endLine":7,"endColumn":23},{"ruleId":"126","severity":1,"message":"143","line":8,"column":17,"nodeType":"128","messageId":"129","endLine":8,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":21,"column":71,"nodeType":"148","endLine":21,"endColumn":82},{"ruleId":"126","severity":1,"message":"149","line":17,"column":8,"nodeType":"128","messageId":"129","endLine":17,"endColumn":13},{"ruleId":"126","severity":1,"message":"150","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":19,"column":18,"nodeType":"128","messageId":"129","endLine":19,"endColumn":25},{"ruleId":"126","severity":1,"message":"143","line":20,"column":19,"nodeType":"128","messageId":"129","endLine":20,"endColumn":27},{"ruleId":"126","severity":1,"message":"137","line":22,"column":21,"nodeType":"128","messageId":"129","endLine":22,"endColumn":31},{"ruleId":"126","severity":1,"message":"151","line":24,"column":12,"nodeType":"128","messageId":"129","endLine":24,"endColumn":19},{"ruleId":"138","severity":1,"message":"152","line":75,"column":8,"nodeType":"140","endLine":75,"endColumn":10,"suggestions":"153"},{"ruleId":"126","severity":1,"message":"154","line":4,"column":5,"nodeType":"128","messageId":"129","endLine":4,"endColumn":19},{"ruleId":"126","severity":1,"message":"155","line":6,"column":5,"nodeType":"128","messageId":"129","endLine":6,"endColumn":13},{"ruleId":"126","severity":1,"message":"131","line":20,"column":18,"nodeType":"128","messageId":"129","endLine":20,"endColumn":25},{"ruleId":"126","severity":1,"message":"143","line":22,"column":19,"nodeType":"128","messageId":"129","endLine":22,"endColumn":27},{"ruleId":"126","severity":1,"message":"156","line":23,"column":12,"nodeType":"128","messageId":"129","endLine":23,"endColumn":22},{"ruleId":"126","severity":1,"message":"157","line":23,"column":24,"nodeType":"128","messageId":"129","endLine":23,"endColumn":37},{"ruleId":"138","severity":1,"message":"158","line":46,"column":8,"nodeType":"140","endLine":46,"endColumn":10,"suggestions":"159"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'hotels' is assigned a value but never used.","'setUser' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setDestination' is assigned a value but never used.","'setOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state.date', 'location.state.destination', and 'location.state.options'. Either include them or remove the dependency array.","ArrayExpression",["160"],"'setDate' is assigned a value but never used.","'setHotel' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'format' is defined but never used.","'checked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hotel.rooms' and 'options'. Either include them or remove the dependency array.",["161"],"'faCalendarDays' is defined but never used.","'faPerson' is defined but never used.","'roomBooked' is assigned a value but never used.","'setRoomBooked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.username'. Either include it or remove the dependency array.",["162"],{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [location.state.date, location.state.destination, location.state.options]",{"range":"169","text":"170"},"Update the dependencies array to be: [hotel.rooms, options]",{"range":"171","text":"172"},"Update the dependencies array to be: [user.username]",{"range":"173","text":"174"},[1183,1185],"[location.state.date, location.state.destination, location.state.options]",[2648,2650],"[hotel.rooms, options]",[1396,1398],"[user.username]"]